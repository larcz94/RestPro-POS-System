/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

//import com.sun.jmx.remote.util.OrderClassLoaders;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.StyleConstants;

/**
 *
 * @author Asanka
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        
        initComponents();
         setIcon();
        setLocationRelativeTo(null);
       
        jLabel_date.setText(today);
       
    }
    
     private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
        }
  
    // get current hour in day
    LocalDateTime time = LocalDateTime.now();
    int hour = time.getHour();

    //Generate message
    public void getGreeting() {

        if (6 <= hour && 11 >= hour) {
            JOptionPane.showMessageDialog(rootPane, "Good Morning! ");
        } else if (12 == hour) {
            JOptionPane.showMessageDialog(rootPane, "Good Afternoon! ");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Good Evening!  ");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField_Employee_id = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField_Password = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField_barcode = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel_date = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login Form");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setOpaque(false);

        jLabel6.setFont(new java.awt.Font("Elephant", 1, 30)); // NOI18N
        jLabel6.setText("Employee Attendance");

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setOpaque(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 255));
        jLabel5.setText("Scan Your ID ");

        jTextField_Employee_id.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jTextField_Employee_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_Employee_idKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(112, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField_Employee_id, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(242, 242, 242))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField_Employee_id, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(jLabel6)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Welcome to RestPro System");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, -1, -1));

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setOpaque(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Password");

        jPasswordField_Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField_PasswordActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/login1.png"))); // NOI18N
        jButton1.setText("Login");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 204));
        jLabel4.setText("Forgot Password");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jTextField_barcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_barcodeKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Barcode Id");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setText("Sign up Here!");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel3))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_barcode, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                            .addComponent(jPasswordField_Password))))
                .addGap(48, 48, 48))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_barcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 500, -1, 180));

        jLabel1.setFont(new java.awt.Font("Elephant", 0, 30)); // NOI18N
        jLabel1.setText("Login Here");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 440, -1, -1));

        jLabel_date.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel_date.setText("0000-00-00");
        getContentPane().add(jLabel_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 230, 110, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/login_1.jpg"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Login();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPasswordField_PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField_PasswordActionPerformed
        Login();
    }//GEN-LAST:event_jPasswordField_PasswordActionPerformed

    private void jTextField_Employee_idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_Employee_idKeyTyped
        if (evt.getKeyChar() == 10 || evt.getKeyChar() == 13) {

            String sql = "select e.Barcode , e.Emp_Id, ed.Date, ed.In_Time, ed.Out_Time ,e.Salary from Employee e, Working_Details ed where e.Emp_Id=ed.Emp_Id and e.Barcode = '" + jTextField_Employee_id.getText() + "' and Date='" + today + "' ";

            Connection con = DBconnect.connectdb();
            Statement st;
            ResultSet rs;

            //Convert String to Date
            String Today = today;
            DateFormat format = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);

            try {
                st = con.createStatement();
                rs = st.executeQuery(sql);

                if (rs.next()) {

                    int id = rs.getInt(2);//get id number in Database
                    Date day = rs.getDate(3);//get date in database
                    Date date = format.parse(Today); //get current date
                    int In_Time = rs.getInt(4); //get IN_Time in database
                    int Out_Time = rs.getInt(5); // get OUT_TIME in data base
                    float Salary = rs.getFloat(6);//get Salary per Hour in database

                    //chek wether current date is already insered or not(inserted then update off time in employee) and OUT TIME is not inserted
                    if (Out_Time == 0 && date.equals(day)) {

                        int Hour_Now = time.getHour();//current hour
                        int Working_Hours = Hour_Now - In_Time;//(OUT TIME - IN TIME)
                        float Amount = Working_Hours * Salary;

                        //call for update table
                        Emplyee_Details_Update(id, Working_Hours, Amount);
                        getGreeting(); //show Greeting

                        jTextField_Employee_id.setText("");
                        jTextField_Employee_id.requestFocus();

                    } //check ID is Used or Not
                    else if (Out_Time != 0 && date.equals(day)) {
                        JOptionPane.showMessageDialog(rootPane, "Oops! This ID has already taken for today");
                        jTextField_Employee_id.setText("");
                        jTextField_Employee_id.requestFocus();
                    }

                    //id ara not match in current day. then id check valied or not . if it is valied then input new day
                } else {

                    String sql1 = " select Emp_Id from Employee where Barcode='" + jTextField_Employee_id.getText() + "' ";
                    rs = st.executeQuery(sql1);

                    if (rs.next()) {
                        int id = rs.getInt(1);//get id number in Database

                        //call for insert table
                        Emplyee_Details_Input(id);
                        getGreeting();

                        jTextField_Employee_id.setText("");
                        jTextField_Employee_id.requestFocus();

                    } else {

                        JOptionPane.showMessageDialog(rootPane, "Invalid Identity Card");
                          jTextField_Employee_id.setText("");
                        jTextField_Employee_id.requestFocus();
                    }

                }

                rs.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, e);
            } catch (ParseException ex) {
                Logger.getLogger(Employee.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jTextField_Employee_idKeyTyped

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        new Password_Reset().setVisible(true);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jTextField_barcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_barcodeKeyTyped
   if (evt.getKeyChar() == 10 || evt.getKeyChar() == 13) {

           jPasswordField_Password.requestFocus();
                   

                }
    }//GEN-LAST:event_jTextField_barcodeKeyTyped

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.dispose();
        new Password_Set().setVisible(true);
    }//GEN-LAST:event_jLabel2MouseClicked

    public void executeQuery(String query) {

        Connection con = DBconnect.connectdb();
        Statement st;

        try {
            st = con.createStatement();
            st.executeUpdate(query);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }

    }

    // Update Out time in Employee(date= today)  
    public void Emplyee_Details_Update(int Emp_Id, int Working_Hours, float Amount) {
        String query = "UPDATE Working_Details SET Out_Time='" + hour + "' , Hours='" + Working_Hours + "' ,Amount='" + Amount + "' WHERE Date='" + today + "' and Emp_Id='" + Emp_Id + "' ";
        executeQuery(query);

    }

    // Insert  In time in Employee  
    public void Emplyee_Details_Input(int Emp_Id) {
        String query = "insert into Working_Details (Emp_Id,Date,In_Time,Out_Time,Hours,Amount) values('" + Emp_Id + "','" + today + "','" + hour + "',0,0,0)";
        executeQuery(query);

    }

    public String passDecript(){
   String encryptedPassword=null;
    
        
            
             try {
                 
        String password = String.valueOf(jPasswordField_Password.getPassword());
           
        encryptedPassword = abbb.encrypt(password);
          
          
        
              
        } catch(Exception e) { 
            System.out.println("bug"+e.getMessage()); 
        }
            
      
    return encryptedPassword;
    }

    
    
    
    
    String today = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());

    //manager cashier login
    public void Login() {
        String name = null;//name of position
        String realName=null;//name of person
        int id = 0;
        String query = "select Status,Emp_Id,Employee_Name from Employee where Barcode='" + jTextField_barcode.getText() + "' ";

        String trueQuery = null;

        try {

            Connection con = DBconnect.connectdb();
            Statement stmt = con.createStatement();

            ResultSet rs = stmt.executeQuery(query);

            if (rs.next()) {

                name = rs.getString(1);
                id = rs.getInt(2);
                 realName = rs.getString(3);

                String sql1 = "select *  FROM  Cashier WHERE  Id='" + id + "' and Password='"+passDecript()+"' ";
                String sql2 = "select *  FROM Manager WHERE  Id='" + id + "' and Password='" +passDecript()+ "' ";
                String sql3 = "select *  FROM Waiter WHERE Id='" + id + "' and Password='" +passDecript()+ "' ";
                String sql4 = "select *  FROM Inventory_Manager WHERE Id='" + id + "' and Password='" +passDecript()+ "' ";
                String sql5 = "select *  FROM Kitchan_Manager WHERE Id='" + id + "' and Password='" +passDecript()+ "' ";

                if (null != name) {
                    switch (name) {

                        case "Manager":
                            trueQuery = sql2;
                            break;
                        case "Cashier":
                            trueQuery = sql1;
                            break;
                        case "Waiter":
                            trueQuery = sql3;
                            break;
                        case "Kitchan_Manager":

                            trueQuery = sql5;
                            break;
                        case "Inventory_Keeper":
                            trueQuery = sql4;
                            break;
                        default:
                            break;
                    }
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Invalid Barcode ID ");
            }

        } catch (Exception e) {

           // JOptionPane.showMessageDialog(rootPane, e);

        }

        boolean a = true;

        try {

            Connection con = DBconnect.connectdb();
            Statement stmt = con.createStatement();

            ResultSet rs1 = stmt.executeQuery(trueQuery);
            System.out.println(name + " 2");
            if (rs1.next()) {
                System.out.println(name + " 3");
                a = false;
                if (null != name) {
                    switch (name) {
                        case "Manager":
                            new Manager(realName).setVisible(true);
                            this.dispose();
                            break;
                        case "Cashier":
                            new Selling(realName).setVisible(true);
                            this.dispose();
                            break;
                        case "Waiter":
                            new Oder(id,realName).setVisible(true);
                            this.dispose();
                            break;
                        case "Kitchan_Manager":
                           
                            new Kitchen_Manager(id,realName).setVisible(true);
                            this.dispose();
                            break;
                        case "Inventory_Keeper":
                            new Inventory_Keeper(id,realName).setVisible(true);
                            this.dispose();
                            break;
                        default:
                            break;
                    }
                }

            }

        } catch (Exception e) {

        //    JOptionPane.showMessageDialog(rootPane, e);

        }

        if (a == true) {
            JOptionPane.showMessageDialog(rootPane, "Invalid  Password");
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Thread.sleep(5000);
                    
                } catch (Exception e) {
                }
                new Login().setVisible(true);
              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel_date;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPasswordField jPasswordField_Password;
    private javax.swing.JTextField jTextField_Employee_id;
    private javax.swing.JTextField jTextField_barcode;
    // End of variables declaration//GEN-END:variables

   


}
